library(test)
substances <- unique(as.character(BDP_COMPO$substance))
substances2 <- retirer_accent(substances)
substances2 <- tolower(substances2)
writeLines(substances2,"substances_COMPO.txt")
library(test)
rm(list=ls())
bool <- ANSM_COMPO$substance == ""
print (sum(bool))
voir <- subset (ANSM_COMPO, bool)
voir <- subset (ANSM_COMPO, code %in% voir$code)
voir <- voir[order(voir$code),]
voir <- unique(subset (voir, select=c("code","substance")))
print (voir, row.names=F)
## Comme on peut le voir, la valeur est vide dans la colonne substance, bien que
# un libellé est présent pour un autre médicament
# on fait l'hypothèse que ces codes correspondent bien à ces libellés,
# on enlève les valeurs vides
ANSM_COMPO <- subset (ANSM_COMPO, !bool)
# dataframe substance :
substances <- subset (ANSM_COMPO, select=c("code","substance"))
substances <- unique(substances)
# nombre de codes différents :
length(unique(substances$code))
# nombre de substances différentes :
length(unique(substances$substance))
#
substances$substance <- tolower(substances$substance)
substances$substance <- retirer_accent(substances$substance)
substances$substance <- retirer_espace(substances$substance)
bool <- grepl("\\[",substances$substance)
voir <- subset (substances, bool)
substances$tokens <- substances$substance
substances$tokens <- gsub("[[:punct:]]"," ",substances$tokens )
write.table(substances, "substances_ANSM.csv",sep="\t",col.names=F, row.names=F)
View(substances)
library(test)
rm(list=ls())
bool <- ANSM_COMPO$substance == ""
print (sum(bool))
voir <- subset (ANSM_COMPO, bool)
voir <- subset (ANSM_COMPO, code %in% voir$code)
voir <- voir[order(voir$code),]
voir <- unique(subset (voir, select=c("code","substance")))
print (voir, row.names=F)
## Comme on peut le voir, la valeur est vide dans la colonne substance, bien que
# un libellé est présent pour un autre médicament
# on fait l'hypothèse que ces codes correspondent bien à ces libellés,
# on enlève les valeurs vides
ANSM_COMPO <- subset (ANSM_COMPO, !bool)
# dataframe substance :
substances <- subset (ANSM_COMPO, select=c("code","substance"))
substances <- unique(substances)
# nombre de codes différents :
length(unique(substances$code))
# nombre de substances différentes :
length(unique(substances$substance))
#
View(substances)
substances$substance2 <- tolower(substances$substance)
substances$substance2 <- retirer_accent(substances$substance2)
substances$substance2 <- retirer_espace(substances$substance2)
bool <- grepl("\\[",substances$substance2)
voir <- subset (substances, bool)
View(voir)
View(substances)
#substances$tokens <- gsub("[[:punct:]]"," ",substances$tokens )
write.table(substances, "substances_ANSM.csv",sep="\t",col.names=F, row.names=F)
library(test)
rm(list=ls())
bool <- ANSM_COMPO$substance == ""
print (sum(bool))
voir <- subset (ANSM_COMPO, bool)
voir <- subset (ANSM_COMPO, code %in% voir$code)
voir <- voir[order(voir$code),]
voir <- unique(subset (voir, select=c("code","substance")))
print (voir, row.names=F)
## Comme on peut le voir, la valeur est vide dans la colonne substance, bien que
# un libellé est présent pour un autre médicament
# on fait l'hypothèse que ces codes correspondent bien à ces libellés,
# on enlève les valeurs vides
ANSM_COMPO <- subset (ANSM_COMPO, !bool)
# dataframe substance :
substances <- subset (ANSM_COMPO, select=c("code","substance"))
substances <- unique(substances)
# nombre de codes différents :
length(unique(substances$code))
# nombre de substances différentes :
length(unique(substances$substance))
#
write.table(substances, "substances_ANSM.csv",sep="\t",col.names=F, row.names=F)
colnames(substances)
substances$libelle <- substances$substance
write.table(substances, "substances_ANSM.csv",sep="\t",col.names=F, row.names=F)
View(substances)
library(test)
rm(list=ls())
bool <- ANSM_COMPO$substance == ""
print (sum(bool))
voir <- subset (ANSM_COMPO, bool)
voir <- subset (ANSM_COMPO, code %in% voir$code)
voir <- voir[order(voir$code),]
voir <- unique(subset (voir, select=c("code","substance")))
print (voir, row.names=F)
## Comme on peut le voir, la valeur est vide dans la colonne substance, bien que
# un libellé est présent pour un autre médicament
# on fait l'hypothèse que ces codes correspondent bien à ces libellés,
# on enlève les valeurs vides
ANSM_COMPO <- subset (ANSM_COMPO, !bool)
# dataframe substance :
substances <- subset (ANSM_COMPO, select=c("code","substance"))
substances <- unique(substances)
# nombre de codes différents :
length(unique(substances$code))
# nombre de substances différentes :
length(unique(substances$substance))
#
substances$libelle <- tolower(substances$substance)
substances$libelle <- retirer_accent(substances$libelle)
substances$libelle <- retirer_espace(substances$libelle)
bool <- grepl("\\[",substances$libelle)
voir <- subset (substances, bool)
substances$libelle <- gsub("[[:punct:]]"," ",substances$libelle )
write.table(substances, "substances_ANSM.csv",sep="\t",col.names=F, row.names=F)
View(substances)
library(test)
rm(list=ls())
bool <- ANSM_COMPO$substance == ""
print (sum(bool))
voir <- subset (ANSM_COMPO, bool)
voir <- subset (ANSM_COMPO, code %in% voir$code)
voir <- voir[order(voir$code),]
voir <- unique(subset (voir, select=c("code","substance")))
print (voir, row.names=F)
## Comme on peut le voir, la valeur est vide dans la colonne substance, bien que
# un libellé est présent pour un autre médicament
# on fait l'hypothèse que ces codes correspondent bien à ces libellés,
# on enlève les valeurs vides
ANSM_COMPO <- subset (ANSM_COMPO, !bool)
# dataframe substance :
substances <- subset (ANSM_COMPO, select=c("code","substance"))
substances <- unique(substances)
# nombre de codes différents :
length(unique(substances$code))
# nombre de substances différentes :
length(unique(substances$substance))
#
substances$libelle <- tolower(substances$substance)
substances$libelle <- retirer_accent(substances$libelle)
substances$libelle <- retirer_espace(substances$libelle)
bool <- grepl("\\[",substances$libelle)
voir <- subset (substances, bool)
substances$libelle <- gsub("[[:punct:]]"," ",substances$libelle )
substances$substance <- substances$libelle
write.table(substances, "substances_ANSM.csv",sep="\t",col.names=F, row.names=F)
